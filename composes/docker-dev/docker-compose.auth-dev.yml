version: "3.9"
services:
  postgres:
    container_name: keycloak-db
    image: "postgres:latest"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
#      - ./sql:/docker-entrypoint-initdb.d/:ro # turn it on, if you need run init DB
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres
    networks:
      - authenticatordb
      - pgadmin
    ports:
      - "5432:5432"
      
  keycloak:
    container_name: keycloak
    image: "authenticator/keycloak:latest"
    command: ['start', '--optimized']
    depends_on:
      - "postgres"
    environment:
      JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: postgres
      KC_HEALTH_ENABLED: 'true'
      KC_HTTP_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KC_HOSTNAME_URL: http://10.0.2.2:8083
      KC_PROXY: reencrypt
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    ports:
      - "8083:8080"
      - "8787:8787" # debug port
    networks:
      - authenticator
      - authenticatordb

  user-service:
    container_name: auth-user-service
    image: authenticator/auth-user:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker-dev
    depends_on:
      - keycloak
    ports: 
      - "8084:8084"
    networks:
      - authenticator
      - rabbitmq

networks:
  authenticator:
    name: authenticator
    driver: bridge
  authenticatordb:
    name: authenticatordb
    driver: bridge
  pgadmin:
    name: pgadmin
    external: true
  rabbitmq:
    name: rabbitmq
    external: true

volumes:
  postgres_data: